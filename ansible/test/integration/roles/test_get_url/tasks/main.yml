# Test code for the file module.
# (c) 2014, Richard Isaacson <richard.c.isaacson@gmail.com>

# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

- name: test https fetch
  get_url: url="https://raw.githubusercontent.com/ansible/ansible/devel/README.md" dest={{output_dir}}/get_url.txt force=yes
  register: result

- name: assert the get_url call was successful
  assert:
    that:
    - result.changed 
    - '"OK" in result.msg'

- name: test https fetch to a site with mismatched hostname and certificate
  get_url:
    url: "https://kennethreitz.org/"
    dest: "{{ output_dir }}/shouldnotexist.html"
  ignore_errors: True
  register: result

- stat:
    path: "{{ output_dir }}/shouldnotexist.html"
  register: stat_result

- name: Assert that the file was not downloaded
  assert:
    that:
      - "result.failed == true"
      - "'Certificate does not belong to ' in result.msg"
      - "stat_result.stat.exists == false"

- name: test https fetch to a site with mismatched hostname and certificate and validate_certs=no
  get_url:
    url: "https://kennethreitz.org/"
    dest: "{{ output_dir }}/kreitz.html"
    validate_certs: no
  register: result

- stat:
    path: "{{ output_dir }}/kreitz.html"
  register: stat_result

- name: Assert that the file was downloaded
  assert:
    that:
      - "result.changed == true"
      - "stat_result.stat.exists == true"

# SNI Tests
# SNI is only built into the stdlib from python-2.7.9 onwards
- name: Test that SNI works
  get_url:
    # A test site that returns a page with information on what SNI information
    # the client sent.  A failure would have the string: did not send a TLS server name indication extension
    url: 'https://foo.sni.velox.ch/'
    dest: "{{ output_dir }}/sni.html"
  register: get_url_result
  ignore_errors: True

- command: "grep 'sent the following TLS server name indication extension' {{ output_dir}}/sni.html"
  register: data_result
  when: "{{ ansible_python_version | version_compare('2.7.9', '>=') }}"

# If distros start backporting SNI, can make a new conditional based on whether this works:
# python -c 'from ssl import SSLContext'
- debug: msg=get_url_result
- name: Assert that SNI works with this python version
  assert:
    that:
      - 'data_result.rc == 0'
      - '"failed" not in get_url_result'
  when: "{{ ansible_python_version | version_compare('2.7.9', '>=') }}"

# If the client doesn't support SNI then get_url should have failed with a certificate mismatch
- name: Assert that hostname verification failed because SNI is not supported on this version of python
  assert:
    that:
      - 'get_url_result["failed"]'
  when: "{{ ansible_python_version | version_compare('2.7.9', '<') }}"
